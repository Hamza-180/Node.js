'use strict';

// Export the pluralize function directly
module.exports = pluralize;

/**
 * Pluralization rules.
 */
const pluralizationRules = [
  ['human$', 'humans'],
  ['(m)an$', '$1en'],
  ['(pe)rson$', '$1ople'],
  ['(child)$', '$1ren'],
  ['^(ox)$', '$1en'],
  ['(ax|test)is$', '$1es'],
  ['(octop|vir)us$', '$1i'],
  ['(alias|status)$', '$1es'],
  ['(bu)s$', '$1ses'],
  ['(buffal|tomat|potat)o$', '$1oes'],
  ['([ti])um$', '$1a'],
  ['sis$', 'z'],
  ['(?:([^f])fe|([lr])f)$', '$1$2ves'],
  ['(hive)$', '$1s'],
  ['([^aeiouy]|qu)y$', '$1ies'],
  ['(x|ch|ss|sh)$', '$1es'],
  ['(matr|vert|ind)ix|ex$', '$1ices'],
  ['([m|l])ouse$', '$1ice'],
  ['(kn|w|l)ife$', '$1ives'],
  ['(quiz)$', '$1s'],
  ['^goose$', 'geese'],
  ['s$', 's'],
  ['$', 's'],
  ['\\b', '']
];

/**
 * Uncountable words.
 *
 * These words are applied while processing the argument to `toCollectionName`.
 * @api public
 */
const uncountables = [
  'advice',
  'energy',
  'excretion',
  'digestion',
  'cooperation',
  'health',
  'justice',
  'labour',
  'machinery',
  'equipment',
  'information',
  'pollution',
  'sewage',
  'paper',
  'money',
  'species',
  'series',
  'rain',
  'rice',
  'fish',
  'sheep',
  'moose',
  'deer',
  'news',
  'expertise',
  'status',
  'media'
];

/**
 * Pluralize function.
 *
 * @author TJ Holowaychuk (extracted from _ext.js_)
 * @param {String} string to pluralize
 * @api private
 */
function pluralize(str) {
  let found;
  str = str.toLowerCase();

  // Check if the string is an uncountable word
  if (uncountables.indexOf(str) === -1) {
    found = pluralizationRules.find(function(rule)
