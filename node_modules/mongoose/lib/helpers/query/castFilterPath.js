'use strict';

const isOperator = require('./isOperator');

module.exports = function castFilterPath(query, schematype, val) {
  const ctx = query;
  const any$conditionals = Object.keys(val).some(isOperator);

  if (!any$conditionals) {
    return schematype.castForQuery(null, val, ctx);
  }

  const keys = Object.keys(val);

  for (let i = keys.length - 1; i >= 0; i--) {
    const key = keys[i];
    const nested = val[key];

    if (key === '$not') {
      if (nested && schematype && !schematype.caster) {
        const nestedKeys = Object.keys(nested);

        if (nestedKeys.length && isOperator(nestedKeys[0])) {
          for (const nestedKey of Object.keys(nested)) {
            nested[nestedKey] = schematype.castForQuery(
              nestedKey,
              nested[nestedKey],
              ctx
            );
          }
        } else {
          val[key] = schematype.castForQuery(
            key,
            nested,
            ctx
          );
        }
        continue;
      }
    }

    val[key] = schematype.castForQuery(key, nested, ctx);
  }

  return val;
}
