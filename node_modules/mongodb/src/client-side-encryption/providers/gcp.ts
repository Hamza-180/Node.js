import { getGcpMetadata } from '../../deps';
import { type KMSProviders } from '.';

/**
 * Loads GCP credentials and returns the updated KMSProviders object with the GCP access token.
 * @internal
 */
export async function loadGCPCredentials(kmsProviders: KMSProviders): Promise<KMSProviders> {
  const gcpMetadata = getGcpMetadata();

  if ('kModuleError' in gcpMetadata) {
    return kmsProviders;
  }

  try {
    const tokenResponse = await gcpMetadata.instance<{ access_token: string }>({
      property: 'service-accounts/default/token'
    });
    const accessToken = tokenResponse.access_token;
    return { ...kmsProviders, gcp: { accessToken } };
  } catch (error) {
    // Log the error or handle it appropriately
    console.error('Error fetching GCP access token:', error);
    return kmsProviders;
  }
}

